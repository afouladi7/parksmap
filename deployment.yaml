---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    openshift.io/cluster-monitoring: "true"
  name: demo
spec: {}
---
apiVersion: v1
kind: ResourceQuota
metadata:
  namespace: demo
  name: mem-cpu-demo
spec:
  hard:
    requests.cpu: "1"
    requests.memory: 1Gi
    limits.cpu: "2"
    limits.memory: 2Gi
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: view
  namespace: demo
subjects:
  - kind: ServiceAccount
    name: default
    namespace: demo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parksmap
  namespace: demo
  labels:
    app: workshop
    app.kubernetes.io/component: parksmap
    app.kubernetes.io/instance: parksmap
    app.kubernetes.io/name: parksmap
    app.kubernetes.io/part-of: workshop
    component: parksmap
    role: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parksmap
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: parksmap
        component: parksmap
        deploymentconfig: parksmap
        role: frontend
    spec:
      containers:
        - name: parksmap
          image: >-
            quay.io/openshiftroadshow/parksmap:latest
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              memory: "800Mi"
              cpu: "800m"
            requests:
              memory: "600Mi"
              cpu: "400m"
---
kind: Service
apiVersion: v1
metadata:
  name: parksmap
  namespace: demo
  labels:
    app: parksmap
    app.kubernetes.io/component: parksmap
    app.kubernetes.io/instance: parksmap
    app.kubernetes.io/name: parksmap
    app.kubernetes.io/part-of: parksmap-app
    app.openshift.io/runtime-version: latest
spec:
  selector:
    app: parksmap
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: parksmap
  namespace: demo
spec:
  path: /
  to:
    kind: Service
    name: parksmap
  port:
    targetPort: 8080
  tls:
    termination: edge
  wildcardPolicy: None
